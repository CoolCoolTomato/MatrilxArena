{
  "Attachment": {
    "GetAttachmentListFail": "Get attachment list fail",
    "GetAttachmentListSuccess": "Get attachment list success",
    "GetAttachmentFail": "Get attachment fail",
    "GetAttachmentSuccess": "Get attachment success",
    "CreateAttachmentFail": "Create attachment fail",
    "CreateAttachmentSuccess": "Create attachment success",
    "UpdateAttachmentFail": "Update attachment fail",
    "UpdateAttachmentSuccess": "Update attachment success",
    "DeleteAttachmentFail": "Delete attachment fail",
    "DeleteAttachmentSuccess": "Delete attachment success",
    "UploadFileFail": "Upload file fail",
    "SaveFileFail": "Save file fail",
    "UploadAttachmentSuccess": "Upload attachment success",
    "FileNotFound": "File not found",
    "InvalidArgument": "Invalid argument"
  },
  "Auth": {
    "UpdateUserFail": "Update user fail",
    "UserNotFound": "User not found",
    "InvalidUsernameOrPassword": "Invalid username or password",
    "FailedToGenerateToken": "Failed to generate token",
    "LoginSuccess": "Login success",
    "InvalidToken": "Invalid token",
    "Authorized": "Authorized",
    "GetUserByAuthSuccess": "Get user by auth success",
    "SetPasswordFail": "Set password fail",
    "ResetPasswordSuccess": "Reset password success",
    "InvalidArgument": "Invalid argument"
  },
  "Category": {
    "GetCategoryListFail": "Get category list fail",
    "GetCategoryListSuccess": "Get category list success",
    "GetCategoryFail": "Get category fail",
    "GetCategorySuccess": "Get category success",
    "CreateCategoryFail": "Create category fail",
    "CreateCategorySuccess": "Create category success",
    "UpdateCategoryFail": "Update category fail",
    "UpdateCategorySuccess": "Update category success",
    "DeleteCategoryFail": "Delete category fail",
    "DeleteCategorySuccess": "Delete category success",
    "InvalidArgument": "Invalid argument"
  },
  "Challenge": {
    "GetChallengeListFail": "Get challenge list fail",
    "GetChallengeListSuccess": "Get challenge list success",
    "GetChallengeFail": "Get challenge fail",
    "GetChallengeSuccess": "Get challenge success",
    "CreateChallengeFail": "Create challenge fail",
    "CreateChallengeSuccess": "Create challenge success",
    "UpdateChallengeFail": "Update challenge fail",
    "UpdateChallengeSuccess": "Update challenge success",
    "DeleteChallengeFail": "Delete challenge fail",
    "DeleteChallengeSuccess": "Delete challenge success",
    "InvalidArgument": "Invalid argument"
  },
  "CTF": {
    "GetCTFListFail": "Get CTF list fail",
    "GetCTFListSuccess": "Get CTF list success",
    "GetCTFFail": "Get CTF fail",
    "GetCTFSuccess": "Get CTF success",
    "CreateCTFFail": "Create CTF fail",
    "CreateCTFSuccess": "Create CTF success",
    "UpdateCTFFail": "Update CTF fail",
    "UpdateCTFSuccess": "Update CTF success",
    "DeleteCTFFail": "Delete CTF fail",
    "DeleteCTFSuccess": "Delete CTF success",
    "InvalidArgument": "Invalid argument"
  },
  "CTFChallenge": {
    "GetCTFChallengeListFail": "Get CTF challenge list fail",
    "GetCTFChallengeListSuccess": "Get CTF challenge list success",
    "GetCTFChallengeFail": "Get CTF challenge fail",
    "GetCTFChallengeSuccess": "Get CTF challenge success",
    "CreateCTFChallengeFail": "Create CTF challenge fail",
    "CreateCTFChallengeSuccess": "Create CTF challenge success",
    "UpdateCTFChallengeFail": "Update CTF challenge fail",
    "UpdateCTFChallengeSuccess": "Update CTF challenge success",
    "DeleteCTFChallengeFail": "Delete CTF challenge fail",
    "DeleteCTFChallengeSuccess": "Delete CTF challenge success",
    "InvalidArgument": "Invalid argument"
  },
  "CTFTeam": {
    "GetCTFTeamListFail": "Get CTF Team list fail",
    "GetCTFTeamListSuccess": "Get CTF Team list success",
    "GetCTFTeamFail": "Get CTF Team fail",
    "GetCTFTeamSuccess": "Get CTF Team success",
    "CreateCTFTeamFail": "Create CTF Team fail",
    "CreateCTFTeamSuccess": "Create CTF Team success",
    "UpdateCTFTeamFail": "Update CTF Team fail",
    "UpdateCTFTeamSuccess": "Update CTF Team success",
    "DeleteCTFTeamFail": "Delete CTF Team fail",
    "DeleteCTFTeamSuccess": "Delete CTF Team success",
    "InvalidArgument": "Invalid argument"
  },
  "CTFUser": {
    "GetCTFFail": "Get CTF fail",
    "GetUserListFail": "Get user list fail",
    "GetUserListSuccess": "Get user list success",
    "GetUserFail": "Get user fail",
    "AddUserFail": "Add user fail",
    "AddUserSuccess": "Add user success",
    "RemoveUserFail": "Remove user fail",
    "RemoveUserSuccess": "Remove user success",
    "InvalidArgument": "Invalid argument"
  },
  "DockerNode": {
    "GetDockerNodeListFail": "Get dockerNode list fail",
    "GetDockerNodeListSuccess": "Get dockerNode list success",
    "GetDockerNodeFail": "Get dockerNode fail",
    "GetDockerNodeSuccess": "Get dockerNode success",
    "CreateDockerNodeFail": "Create dockerNode fail",
    "CreateDockerNodeSuccess": "Create dockerNode success",
    "UpdateDockerNodeFail": "Update dockerNode fail",
    "UpdateDockerNodeSuccess": "Update dockerNode success",
    "DeleteDockerNodeFail": "Delete dockerNode fail",
    "DeleteDockerNodeSuccess": "Delete dockerNode success",
    "InvalidArgument": "Invalid argument"
  },
  "DockerNodeContainer": {
    "GetDockerNodeFail": "Get dockerNode fail",
    "GetContainerListFail": "Get container list fail",
    "GetContainerListSuccess": "Get container list success",
    "GetContainerFail": "Get container fail",
    "GetContainerSuccess": "Get container success",
    "CreateContainerFail": "Create container fail",
    "CreateContainerSuccess": "Create container success",
    "StartContainerFail": "Start container fail",
    "StartContainerSuccess": "Start container success",
    "StopContainerFail": "Stop container fail",
    "StopContainerSuccess": "Stop container success",
    "RemoveContainerFail": "Remove container fail",
    "RemoveContainerSuccess": "Remove container success",
    "ExecuteCommandFail": "Execute command fail",
    "ExecuteCommandSuccess": "Execute command success",
    "InvalidArgument": "Invalid argument"
  },
  "DockerNodeImage": {
    "GetDockerNodeFail": "Get dockerNode fail",
    "GetImageFail": "Get image fail",
    "GetImageListFromDockerNodeFail": "Get image list from docker node fail",
    "GetImageListFromDockerNodeSuccess": "Get image list from docker node success",
    "GetImageFromDockerNodeFail": "Get image from docker node fail",
    "GetImageFromDockerNodeSuccess": "Get image from docker node success",
    "PullImageFromDockerNodeFail": "Pull image from docker node fail",
    "PullImageFromDockerNodeSuccess": "Pull image from docker node success",
    "RemoveImageFromDockerNodeFail": "Remove image from docker node fail",
    "RemoveImageFromDockerNodeSuccess": "Remove image from docker node success",
    "InvalidArgument": "Invalid argument"
  },
  "Group": {
    "GetGroupListFail": "Get group list fail",
    "GetGroupListSuccess": "Get group list success",
    "GetGroupFail": "Get group fail",
    "GetGroupSuccess": "Get group success",
    "CreateGroupFail": "Create group fail",
    "CreateGroupSuccess": "Create group success",
    "UpdateGroupFail": "Update group fail",
    "UpdateGroupSuccess": "Update group success",
    "DeleteGroupFail": "Delete group fail",
    "DeleteGroupSuccess": "Delete group success",
    "InvalidArgument": "Invalid argument"
  },
  "GroupChallenge": {
    "GetGroupChallengeListFail": "Get group challenge list fail",
    "GetGroupChallengeListSuccess": "Get group challenge list success",
    "GetGroupChallengeFail": "Get group challenge fail",
    "GetGroupChallengeSuccess": "Get group challenge success",
    "CreateGroupChallengeFail": "Create group challenge fail",
    "CreateGroupChallengeSuccess": "Create group challenge success",
    "UpdateGroupChallengeFail": "Update group challenge fail",
    "UpdateGroupChallengeSuccess": "Update group challenge success",
    "DeleteGroupChallengeFail": "Delete group challenge fail",
    "DeleteGroupChallengeSuccess": "Delete group challenge success",
    "InvalidArgument": "Invalid argument"
  },
  "GroupUser": {
    "GetGroupFail": "Get group fail",
    "GetUserListFail": "Get user list fail",
    "GetUserListSuccess": "Get user list success",
    "GetUserFail": "Get user fail",
    "AddUserFail": "Add user fail",
    "AddUserSuccess": "Add user success",
    "RemoveUserFail": "Remove user fail",
    "RemoveUserSuccess": "Remove user success",
    "InvalidArgument": "Invalid argument"
  },
  "Image": {
    "GetImageListFail": "Get image list fail",
    "GetImageListSuccess": "Get image list success",
    "GetImageFail": "Get image fail",
    "GetImageSuccess": "Get image success",
    "CreateImageFail": "Create image fail",
    "CreateImageSuccess": "Create image success",
    "UpdateImageFail": "Update image fail",
    "UpdateImageSuccess": "Update image success",
    "DeleteImageFail": "Delete image fail",
    "DeleteImageSuccess": "Delete image success",
    "InvalidArgument": "Invalid argument"
  },
  "User": {
    "GetUserListFail": "Get user list fail",
    "GetUserListSuccess": "Get user list success",
    "GetUserFail": "Get user fail",
    "GetUserSuccess": "Get user success",
    "SetPasswordFail": "Set password fail",
    "CreateUserFail": "Create user fail",
    "CreateUserSuccess": "Create user success",
    "UpdateUserFail": "Update user fail",
    "UpdateUserSuccess": "Update user success",
    "DeleteUserFail": "Delete user fail",
    "DeleteUserSuccess": "Delete user success",
    "InvalidArgument": "Invalid argument"
  },
  "UserChallenge": {
    "InvalidToken": "Invalid token",
    "UserNotFound": "User not found",
    "GetUserChallengeListFail": "Get user challenge list fail",
    "GetUserChallengeListSuccess": "Get user challenge list success",
    "GetUserChallengeFail": "Get user challenge fail",
    "DeleteUserChallengeFail": "Delete user challenge fail",
    "ResetChallengeSuccess": "Reset challenge success",
    "CheckFlagFromChallengeFail": "Check flag from challenge fail",
    "CheckFlagFromContainerFail": "Check flag from container fail",
    "IncorrectFlag": "Incorrect flag",
    "CorrectFlag": "Correct flag",
    "InvalidArgument": "Invalid argument"
  },
  "UserContainer": {
    "InvalidToken": "Invalid token",
    "UserNotFound": "User not found",
    "GetChallengeFail": "Get challenge fail",
    "GetDockerNodeFail": "Get dockerNode fail",
    "GetDockerNodeListFail": "Get dockerNode list fail",
    "CreateContainerFail": "Create container fail",
    "GetContainerFail": "Get container fail",
    "StartContainerFail": "Start container fail",
    "ExecuteCommandFail": "Execute command fail",
    "CreateContainerSuccess": "Create container success",
    "RemoveContainerFail": "Remove container fail",
    "GetUserContainerListFail": "Get user container list fail",
    "GetUserContainerListSuccess": "Get user container list success",
    "YouCanOnlyCreateUpTo3Containers": "You can only create up to 3 containers",
    "DecodeContainerFail": "Decode container fail",
    "AddUserContainerFail": "Add user container fail",
    "DeleteUserContainerFail": "Delete user container fail",
    "DestroyContainerSuccess": "Destroy container success",
    "ContainerNotFound": "Container not found",
    "RemainingTimeIsGreaterThan10Minutes": "you can only extend the container life when it has less than 10 minutes remaining",
    "DelayContainerFail": "Delay container fail",
    "DelayContainerSuccess": "Delay container success",
    "InvalidArgument": "Invalid argument"
  },
  "UserGroup": {
    "InvalidToken": "Invalid token",
    "UserNotFound": "User not found",
    "GetGroupFail": "Get group fail",
    "GetUserGroupListFail": "Get user group list fail",
    "GetUserGroupListSuccess": "Get user group list success",
    "GetVisibleUserGroupListFail": "Get visible user group list fail",
    "GetVisibleUserGroupListSuccess": "Get visible user group list success",
    "AddUserGroupFail": "Add user group fail",
    "AddUserGroupSuccess": "Add user group success",
    "RemoveUserGroupFail": "Remove user group fail",
    "RemoveUserGroupSuccess": "Remove user group success",
    "InvalidArgument": "Invalid argument"
  },
  "UserGroupChallenge": {
    "InvalidToken": "Invalid token",
    "UserNotFound": "User not found",
    "GetUserGroupChallengeListFail": "Get user group challenge list fail",
    "GetUserGroupChallengeListSuccess": "Get user group challenge list success",
    "GetUserGroupChallengeFail": "Get user group challenge fail",
    "DeleteUserGroupChallengeFail": "Delete user group challenge fail",
    "ResetGroupChallengeSuccess": "Reset group challenge success",
    "CheckFlagFromChallengeFail": "Check flag from challenge fail",
    "CheckFlagFromContainerFail": "Check flag from container fail",
    "IncorrectFlag": "Incorrect flag",
    "CorrectFlag": "Correct flag",
    "InvalidArgument": "Invalid argument"
  },
  "UserGroupContainer": {
    "InvalidToken": "Invalid token",
    "UserNotFound": "User not found",
    "GetGroupChallengeFail": "Get group challenge fail",
    "GetDockerNodeFail": "Get dockerNode fail",
    "GetDockerNodeListFail": "Get dockerNode list fail",
    "CreateContainerFail": "Create container fail",
    "GetContainerFail": "Get container fail",
    "StartContainerFail": "Start container fail",
    "ExecuteCommandFail": "Execute command fail",
    "CreateContainerSuccess": "Create container success",
    "RemoveContainerFail": "Remove container fail",
    "GetUserContainerListFail": "Get user container list fail",
    "GetUserContainerListSuccess": "Get user container list success",
    "YouCanOnlyCreateUpTo3Containers": "You can only create up to 3 containers",
    "DecodeContainerFail": "Decode container fail",
    "AddUserContainerFail": "Add user container fail",
    "DeleteUserContainerFail": "Delete user container fail",
    "DestroyContainerSuccess": "Destroy container success",
    "ContainerNotFound": "Container not found",
    "RemainingTimeIsGreaterThan10Minutes": "you can only extend the container life when it has less than 10 minutes remaining",
    "DelayContainerFail": "Delay container fail",
    "DelayContainerSuccess": "Delay container success",
    "InvalidArgument": "Invalid argument"
  }
}
